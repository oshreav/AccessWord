import tkinter as tk
from tkinter import ttk
from tkinter import *
import sqlite3


#========================user_login_blind========================
def user_login_blind():
    root = tk.Toplevel()
    root.title("AccessWord: user Login")
    width = 400
    height = 280
    screen_width = root.winfo_screenwidth()
    screen_height = root.winfo_screenheight()
    x = (screen_width / 2) - (width / 2)
    y = (screen_height / 2) - (height / 2)
    root.geometry("%dx%d+%d+%d" % (width, height, x, y))
    root.resizable(0, 0)
    # ==============================VARIABLES======================================
    USERNAME = StringVar()
    PASSWORD = StringVar()

    # ==============================METHODS========================================
    def Database():
        global conn, cursor
        conn = sqlite3.connect("AdminPassword.db")
        cursor = conn.cursor()
        cursor.execute(
            "CREATE TABLE IF NOT EXISTS `User_Blind` (mem_id INTEGER NOT NULL PRIMARY KEY  AUTOINCREMENT, username TEXT, password TEXT)")
        cursor.execute("SELECT * FROM `User_Blind` WHERE `username` = 'admin' AND `password` = 'admin'")
        #if cursor.fetchone() is None:
            #cursor.execute("INSERT INTO `User_Blind` (username, password) VALUES('admin', 'admin')")
            #conn.commit()

    def Login(event=None):
        Database()
        if USERNAME.get() == "" or PASSWORD.get() == "":
            lbl_text.config(text="Please complete the required field!", fg="red")
        else:
            cursor.execute("SELECT * FROM `User_Blind` WHERE `username` = ? AND `password` = ?",
                           (USERNAME.get(), PASSWORD.get()))
            if cursor.fetchone() is not None:
                HomeWindow()
                USERNAME.set("")
                PASSWORD.set("")
                lbl_text.config(text="")
            else:
                lbl_text.config(text="Invalid username or password", fg="red")
                USERNAME.set("")
                PASSWORD.set("")
        cursor.close()
        conn.close()

    def HomeWindow():
        global Home
        root.withdraw()
        Home = Toplevel()
        Home.title("AccessWord: User Login")
        width = 400
        height = 100
        screen_width = root.winfo_screenwidth()
        screen_height = root.winfo_screenheight()
        x = (screen_width / 2) - (width / 2)
        y = (screen_height / 2) - (height / 2)
        root.resizable(0, 0)
        Home.geometry("%dx%d+%d+%d" % (width, height, x, y))
        lbl_home = Label(Home, text="Successfully Login!", font=('times new roman', 20)).pack()
        btn_back = Button(Home, text='OK', command=CloseLogin).pack(pady=20, fill=X)

    def CloseLogin():
        Home.destroy()
        keyboard()      # Change To User_Blind Frame!!!
    # ==============================FRAMES=========================================
    Top = Frame(root, bd=2, relief=RIDGE)
    Top.pack(side=TOP, fill=X)
    Form = Frame(root, height=200)
    Form.pack(side=TOP, pady=20)

    # ==============================LABELS=========================================
    lbl_title = Label(Top, text="AccessWord: User Login", font=('arial', 15))
    lbl_title.pack(fill=X)
    lbl_username = Label(Form, text="Username:", font=('arial', 14), bd=15)
    lbl_username.grid(row=0, sticky="e")
    lbl_password = Label(Form, text="Password:", font=('arial', 14), bd=15)
    lbl_password.grid(row=1, sticky="e")
    lbl_text = Label(Form)
    lbl_text.grid(row=2, columnspan=2)

    # ==============================ENTRY WIDGETS==================================
    username = Entry(Form, textvariable=USERNAME, font=(14))
    username.grid(row=0, column=1)
    password = Entry(Form, textvariable=PASSWORD, show="*", font=(14))
    password.grid(row=1, column=1)

    # ==============================BUTTON WIDGETS=================================
    btn_login = Button(Form, text="Login", width=45, command=Login)
    btn_login.grid(pady=0, row=3, columnspan=2)
    btn_login.bind('<Return>', Login)
    btn_register = Button(Form, text="Register", width=20, command=Login)
    btn_register.grid(pady=10, row=4, columnspan=2)
    btn_login.bind('<Return>', Login)
#========================user_login_blind========================


#========================user_login_deaf========================
def user_login_deaf():
    root = tk.Toplevel()
    root.title("AccessWord: user Login")
    width = 400
    height = 280
    screen_width = root.winfo_screenwidth()
    screen_height = root.winfo_screenheight()
    x = (screen_width / 2) - (width / 2)
    y = (screen_height / 2) - (height / 2)
    root.geometry("%dx%d+%d+%d" % (width, height, x, y))
    root.resizable(0, 0)
    # ==============================VARIABLES======================================
    USERNAME = StringVar()
    PASSWORD = StringVar()

    # ==============================METHODS========================================
    def Database():
        global conn, cursor
        conn = sqlite3.connect("AdminPassword.db")
        cursor = conn.cursor()
        cursor.execute(
            "CREATE TABLE IF NOT EXISTS `User_Deaf` (mem_id INTEGER NOT NULL PRIMARY KEY  AUTOINCREMENT, username TEXT, password TEXT)")
        cursor.execute("SELECT * FROM `User_Deaf` WHERE `username` = 'admin' AND `password` = 'admin'")
        if cursor.fetchone() is None:
            cursor.execute("INSERT INTO `User_Deaf` (username, password) VALUES('admin', 'admin')")
            conn.commit()

    def Login(event=None):
        Database()
        if USERNAME.get() == "" or PASSWORD.get() == "":
            lbl_text.config(text="Please complete the required field!", fg="red")
        else:
            cursor.execute("SELECT * FROM `User_Deaf` WHERE `username` = ? AND `password` = ?",
                           (USERNAME.get(), PASSWORD.get()))
            if cursor.fetchone() is not None:
                HomeWindow()
                USERNAME.set("")
                PASSWORD.set("")
                lbl_text.config(text="")
            else:
                lbl_text.config(text="Invalid username or password", fg="red")
                USERNAME.set("")
                PASSWORD.set("")
        cursor.close()
        conn.close()

    def HomeWindow():
        global Home
        root.withdraw()
        Home = Toplevel()
        Home.title("AccessWord: User Login")
        width = 400
        height = 100
        screen_width = root.winfo_screenwidth()
        screen_height = root.winfo_screenheight()
        x = (screen_width / 2) - (width / 2)
        y = (screen_height / 2) - (height / 2)
        root.resizable(0, 0)
        Home.geometry("%dx%d+%d+%d" % (width, height, x, y))
        lbl_home = Label(Home, text="Successfully Login!", font=('times new roman', 20)).pack()
        btn_back = Button(Home, text='OK', command=CloseLogin).pack(pady=20, fill=X)

    def CloseLogin():
        Home.destroy()
        keyboard()      # Change To User_Blind Frame!!!
    # ==============================FRAMES=========================================
    Top = Frame(root, bd=2, relief=RIDGE)
    Top.pack(side=TOP, fill=X)
    Form = Frame(root, height=200)
    Form.pack(side=TOP, pady=20)

    # ==============================LABELS=========================================
    lbl_title = Label(Top, text="AccessWord: User Login", font=('arial', 15))
    lbl_title.pack(fill=X)
    lbl_username = Label(Form, text="Username:", font=('arial', 14), bd=15)
    lbl_username.grid(row=0, sticky="e")
    lbl_password = Label(Form, text="Password:", font=('arial', 14), bd=15)
    lbl_password.grid(row=1, sticky="e")
    lbl_text = Label(Form)
    lbl_text.grid(row=2, columnspan=2)

    # ==============================ENTRY WIDGETS==================================
    username = Entry(Form, textvariable=USERNAME, font=(14))
    username.grid(row=0, column=1)
    password = Entry(Form, textvariable=PASSWORD, show="*", font=(14))
    password.grid(row=1, column=1)

    # ==============================BUTTON WIDGETS=================================
    btn_login = Button(Form, text="Login", width=45, command=Login)
    btn_login.grid(pady=0, row=3, columnspan=2)
    btn_login.bind('<Return>', Login)
    btn_register = Button(Form, text="Register", width=20, command=Login)
    btn_register.grid(pady=10, row=4, columnspan=2)
    btn_login.bind('<Return>', Login)
#========================user_login_deaf========================v

#========================Admin_Login========================
def admin_login():
    root = tk.Toplevel()
    root.title("AccessWord: Admin Login")
    width = 400
    height = 280
    screen_width = root.winfo_screenwidth()
    screen_height = root.winfo_screenheight()
    x = (screen_width / 2) - (width / 2)
    y = (screen_height / 2) - (height / 2)
    root.geometry("%dx%d+%d+%d" % (width, height, x, y))
    root.resizable(0, 0)

    # ==============================VARIABLES======================================
    USERNAME = StringVar()
    PASSWORD = StringVar()

    # ==============================METHODS========================================
    def Database():
        global conn, cursor
        conn = sqlite3.connect("AdminPassword.db")
        cursor = conn.cursor()
        cursor.execute(
            "CREATE TABLE IF NOT EXISTS `Admin` (mem_id INTEGER NOT NULL PRIMARY KEY  AUTOINCREMENT, username TEXT, password TEXT)")
        cursor.execute("SELECT * FROM `Admin` WHERE `username` = 'admin' AND `password` = 'admin'")
        if cursor.fetchone() is None:
            cursor.execute("INSERT INTO `Admin` (username, password) VALUES('admin', 'admin')")
            conn.commit()

    def Login(event=None):
        Database()
        if USERNAME.get() == "" or PASSWORD.get() == "":
            lbl_text.config(text="Please complete the required field!", fg="red")
        else:
            cursor.execute("SELECT * FROM `Admin` WHERE `username` = ? AND `password` = ?",
                           (USERNAME.get(), PASSWORD.get()))
            if cursor.fetchone() is not None:
                HomeWindow()
                USERNAME.set("")
                PASSWORD.set("")
                lbl_text.config(text="")
            else:
                lbl_text.config(text="Invalid username or password", fg="red")
                USERNAME.set("")
                PASSWORD.set("")
        cursor.close()
        conn.close()

    def HomeWindow():
        global Home
        root.withdraw()
        Home = Toplevel()
        Home.title("Python: Simple Login Application")
        width = 400
        height = 100
        screen_width = root.winfo_screenwidth()
        screen_height = root.winfo_screenheight()
        x = (screen_width / 2) - (width / 2)
        y = (screen_height / 2) - (height / 2)
        root.resizable(0, 0)
        Home.geometry("%dx%d+%d+%d" % (width, height, x, y))
        lbl_home = Label(Home, text="Successfully Login!", font=('times new roman', 20)).pack()
        btn_back = Button(Home, text='OK', command=CloseLogin).pack(pady=20, fill=X)

    def CloseLogin():
        Home.destroy()
        keyboard()      # Change To Admin Frame!!!
    # ==============================FRAMES=========================================
    Top = Frame(root, bd=2, relief=RIDGE)
    Top.pack(side=TOP, fill=X)
    Form = Frame(root, height=200)
    Form.pack(side=TOP, pady=20)

    # ==============================LABELS=========================================
    lbl_title = Label(Top, text="AccessWord: Admin Login", font=('arial', 15))
    lbl_title.pack(fill=X)
    lbl_username = Label(Form, text="Username:", font=('arial', 14), bd=15)
    lbl_username.grid(row=0, sticky="e")
    lbl_password = Label(Form, text="Password:", font=('arial', 14), bd=15)
    lbl_password.grid(row=1, sticky="e")
    lbl_text = Label(Form)
    lbl_text.grid(row=2, columnspan=2)

    # ==============================ENTRY WIDGETS==================================
    username = Entry(Form, textvariable=USERNAME, font=(14))
    username.grid(row=0, column=1)
    password = Entry(Form, textvariable=PASSWORD, show="*", font=(14))
    password.grid(row=1, column=1)

    # ==============================BUTTON WIDGETS=================================
    btn_login = Button(Form, text="Login", width=45, command=Login)
    btn_login.grid(pady=25, row=3, columnspan=2)
    btn_login.bind('<Return>', Login)
#========================End of Admin_Login========================

def select(value):
    if value == "BACK":
        entry.delete(len(entry.get()) - 1, END)

    elif value == "SPACE":
        entry.insert(END, ' ')
    elif value == " Tab ":
        entry.insert(END, '    ')
    else:
        entry.insert(END, value)


def HosoPop(kb):

    varRow = 2
    varColumn = 0

    def OptionsKeyboard():
        kb = tk.Toplevel()
        kb.title("KeyBoard - Options")
        width = 600
        height = 600
        screen_width = kb.winfo_screenwidth()
        screen_height = kb.winfo_screenheight()
        x = (screen_width / 2) - (width / 2)
        y = (screen_height / 2) - (height / 2)
        kb.geometry("%dx%d+%d+%d" % (width, height, x, y))
        kb.resizable(0, 0)

    for button in buttons:

        command = lambda x=button: select(x)

        if button == "Space" :
            Button(kb, text=button, width=70, bg="#3c4987", fg="#ffffff",
                   activebackground="#ffffff", activeforeground="#3c4987", relief='raised', padx=10,
                   pady=1, bd=2, command=lambda x=button: select(" ")).grid(row=5, column=0,columnspan = 11)

        elif(button == "Options"):
            Button(kb, text=button, width=10 , bg="#6D6D6D", fg="#0007AB",
                    activebackground="#000000", activeforeground="#3c4987", relief='raised', padx=10,
                    pady=1, bd=2, command=OptionsKeyboard).grid(row=2, column=16)
        else:
            Button(kb, text=button, width=5, bg="#3c4987", fg="#ffffff",
                   activebackground="#ffffff", activeforeground="#3c4987", relief='raised', padx=4,
                   pady=4, bd=2, command=command).grid(row=varRow, column=varColumn)

        varColumn += 1

        if varColumn > 14 and varRow == 2:
            varColumn = 0
            varRow += 1
        if varColumn > 14 and varRow == 3:
            varColumn = 0
            varRow += 1



def keyboard():
    kb = Toplevel()
    kb.title("AccessWord")
    kb.resizable(0, 0)
   # kb.configure(bg='black')
    global entry
    entry = Entry(kb, width=128)
    entry.grid(rowspan=1, columnspan=15, ipadx=100, ipady=20)
    # entry.pack()
    HosoPop(kb)


buttons = ['q','w','e','r','t','y','u','i','o','p','<-','7','8','9','-',
           'a','s','d','f','g','h','j','k','l','[',']','4','5','6','+',
           'z','x','c','v','b','n','m',',','.','?','SHIFT','1','2','3','/',
           'Space' , 'Options']

# Main Window #

root = Tk()
root.title("AccessWord")
l = Label(root, text="!שלום")
l.place(relx=0.45, rely=0.1)
l = Label(root, text=":אנא בחר את סוג המקלדת הרצויה")
l.place(relx=0.3, rely=0.25)
button1 = Button(root, text="Admin", command=admin_login)
button1.pack()
button1.place(relx=0.5, rely=0.6, anchor=CENTER)
button2 = Button(root, text="Hearing impaired", command=user_login_deaf)
button2.pack()
button2.place(relx=0.7, rely=0.6, anchor=CENTER)
button3 = Button(root, text="visually impaired", command=user_login_blind)
button3.pack()
button3.place(relx=0.3, rely=0.6, anchor=CENTER)

root.geometry("500x300+120+120")
root.mainloop()